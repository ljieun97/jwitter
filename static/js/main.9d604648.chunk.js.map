{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","vlaue","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","doc","id","update","onDeleteClick","ok","window","confirm","delete","Home","userObj","nweet","setNweet","nweets","setNweets","useEffect","collection","onSnapshot","snapshot","nweetArray","docs","map","add","createdAt","Date","now","creatorId","uid","maxLength","key","history","useHistory","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d604648.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();","import React, {useState} from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState(); \n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    //변했을 때\n    const onChange = (event) => {\n        const {target: {name, value}} =event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\"){\n            setPassword(value);\n        }\n    }\n\n    //제출했을 때\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    const onSocialClick = async (event) => {\n        const {target:{name}} = event\n        let provider;\n        if(name===\"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name===\"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}> \n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required vlaue={email} onChange={onChange}/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required vlaue={password} onChange={onChange}/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n                <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n                {error}\n            </form>\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    )\n}\nexport default Auth;","import React, {useState} from \"react\"\nimport { dbService } from \"../fbase\"\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false)\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\n\n    //수정버튼 or 취소버튼 누르면 이전상태로 바꿈\n    const toggleEditing = () => setEditing((prev) => !prev)\n    //수정\n    const onChange = (event) => {\n        const {\n            target: {value},\n        }=event;\n        setNewNweet(value)\n    }\n    const onSubmit = async(event) => {\n        event.preventDefault()\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet\n        })\n        setEditing(false)\n    }\n\n    //삭제버튼 : 경고창 확인을 누르면 컬렉션-문서아이디 경로의 문서삭제\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\n        console.log(ok)\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\n        }\n    }\n    \n    return(\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input type=\"text\" placeholder=\"Edit you nweet\" value={newNweet} onChange={onChange} required/>\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form> \n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {isOwner && (\n                    <>\n                        <button onClick={onDeleteClick}>Delete Nweet</button>\n                        <button onClick={toggleEditing}>Edit Nweet</button>\n                    </>)}\n                </>\n            )}\n        </div>\n    );   \n}\n\nexport default  Nweet;","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\n\nconst Home = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweets, setNweets] = useState([])\n\n    //컬렉션에 저장된 각각의 문서들을 실시간으로 불러옴\n    useEffect(() => {    \n        dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            setNweets(nweetArray)\n        })\n    }, [])\n\n    //수정 : 작성하면(이벤트의 타겟안에 있는 값을 가져오면) nweet을 변경\n    const onChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setNweet(value);\n      };\n\n    const onSubmit = async (event) => {\n      //이벤트 완료 후 refresh가 되는 것을 막기위해 이벤트 취소\n      event.preventDefault();\n      //새로운 doc를 collec에 추가\n      await dbService.collection(\"nweets\").add({\n          text: nweet,\n          createdAt: Date.now(),\n          creatorId: userObj.uid\n      });\n      setNweet(\"\");\n    };\n\n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <input\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n          />\n          <input type=\"submit\" value=\"Nweet\" />\n        </form>\n        <div>\n            {nweets.map((nweet) => (\n                <Nweet\n                    key={nweet.id}\n                    nweetObj={nweet}\n                    isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n        </div>\n      </div>\n    );\n  };\nexport default Home;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from \"../fbase\";\n\nexport default () => {\n    const history = useHistory(); \n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\")\n    }\n    return (\n        <>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Navigation = () => <nav>\n    <ul>\n        <li>\n            <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/profile\">My Profile</Link>\n        </li>\n    </ul>\n</nav>\nexport default Navigation;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation />}   \n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj}/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from './Router';\nimport {authService} from '../fbase';\n\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userObj, setUserObj] = useState(null) \n  useEffect (() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setIsLoggedIn(true)\n        setUserObj(user)\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    })\n  }, [])\n  return (\n    <>\n      { init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\" }\n      <footer>&copy; {new Date().getFullYear()} Jwitter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}